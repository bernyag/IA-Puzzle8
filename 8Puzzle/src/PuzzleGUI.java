
import java.awt.Color;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ianzaidenweber
 */

public class PuzzleGUI extends javax.swing.JFrame {

    /**
     * Creates new form PuzzleGUI
     */
    List<Integer> current = new ArrayList<Integer>();
    
    public PuzzleGUI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jButtonClean = new javax.swing.JButton();
        txt0 = new javax.swing.JTextField();
        jButtonSolve1 = new javax.swing.JButton();
        txt2 = new javax.swing.JTextField();
        txt1 = new javax.swing.JTextField();
        txt3 = new javax.swing.JTextField();
        txt4 = new javax.swing.JTextField();
        txt5 = new javax.swing.JTextField();
        txt6 = new javax.swing.JTextField();
        txt7 = new javax.swing.JTextField();
        txt8 = new javax.swing.JTextField();
        btnUp = new javax.swing.JButton();
        btnDown = new javax.swing.JButton();
        btnLeft = new javax.swing.JButton();
        btnRight = new javax.swing.JButton();
        txtResul = new javax.swing.JTextField();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jButtonClean.setForeground(new java.awt.Color(102, 153, 255));
        jButtonClean.setText("Limpiar");
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });

        txt0.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt0.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt0.setText("0");
        txt0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt0ActionPerformed(evt);
            }
        });

        jButtonSolve1.setForeground(new java.awt.Color(0, 204, 0));
        jButtonSolve1.setText("Resolver");
        jButtonSolve1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSolve1ActionPerformed(evt);
            }
        });

        txt2.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt2.setText("2");
        txt2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt2ActionPerformed(evt);
            }
        });

        txt1.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt1.setText("1");
        txt1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt1ActionPerformed(evt);
            }
        });

        txt3.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt3.setText("3");
        txt3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt3ActionPerformed(evt);
            }
        });

        txt4.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt4.setText("4");
        txt4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt4ActionPerformed(evt);
            }
        });

        txt5.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt5.setText("5");
        txt5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt5ActionPerformed(evt);
            }
        });

        txt6.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt6.setText("6");
        txt6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt6ActionPerformed(evt);
            }
        });

        txt7.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt7.setText("7");
        txt7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt7ActionPerformed(evt);
            }
        });

        txt8.setFont(new java.awt.Font("Lucida Grande", 1, 40)); // NOI18N
        txt8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt8.setText("8");
        txt8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        txt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt8ActionPerformed(evt);
            }
        });

        btnUp.setText("↑");
        btnUp.setEnabled(false);
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        btnDown.setText("↓");
        btnDown.setEnabled(false);
        btnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownActionPerformed(evt);
            }
        });

        btnLeft.setText("←");
        btnLeft.setEnabled(false);
        btnLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftActionPerformed(evt);
            }
        });

        btnRight.setText("→");
        btnRight.setEnabled(false);
        btnRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightActionPerformed(evt);
            }
        });

        txtResul.setColumns(3);
        txtResul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResulActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtResul, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRight, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt6, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jButtonClean, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(117, 117, 117)
                                        .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonSolve1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txt8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(24, 24, 24))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt0, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt0, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt5, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRight, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonClean, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSolve1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtResul, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt0ActionPerformed
       

    }//GEN-LAST:event_txt0ActionPerformed

    private void jButtonCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCleanActionPerformed
        txt0.setText("");
        txt2.setText("");
        txt1.setText("");
        txt3.setText("");
        txt4.setText("");
        txt5.setText("");
        txt6.setText("");
        txt7.setText("");
        txt8.setText(""); 
        txt0.setBackground(Color.WHITE);
        txt2.setBackground(Color.WHITE);
        txt1.setBackground(Color.WHITE);
        txt3.setBackground(Color.WHITE);
        txt4.setBackground(Color.WHITE);
        txt5.setBackground(Color.WHITE);
        txt6.setBackground(Color.WHITE);
        txt7.setBackground(Color.WHITE);
        txt8.setBackground(Color.WHITE);
        
        txt0.setEditable(true);
        txt1.setEditable(true);
        txt2.setEditable(true);
        txt3.setEditable(true);
        txt4.setEditable(true);
        txt5.setEditable(true);
        txt6.setEditable(true);
        txt7.setEditable(true);
        txt8.setEditable(true);
        
        //desactiva flechas
        btnUp.setEnabled(false);
        btnDown.setEnabled(false);
        btnLeft.setEnabled(false);
        btnRight.setEnabled(false);
        
        //borra texto 
        txtResul.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonCleanActionPerformed

    private void jButtonSolve1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSolve1ActionPerformed
        Logger logger = Logger.getLogger(PuzzleGUI.class.getName());
//limpia lista inicial
        current.clear();
        
        //activa flechas
        btnUp.setEnabled(true);
        btnDown.setEnabled(true);
        btnLeft.setEnabled(true);
        btnRight.setEnabled(true);
        
        //bloquea texto
        txt0.setEditable(false);
        txt1.setEditable(false);
        txt2.setEditable(false);
        txt3.setEditable(false);
        txt4.setEditable(false);
        txt5.setEditable(false);
        txt6.setEditable(false);
        txt7.setEditable(false);
        txt8.setEditable(false);
        
       
       int indice0;
       if (txt0.getText().equals("") || txt0.getText().equals("0")){
           indice0 = 0;
           txt0.setBackground(Color.BLACK);
       }
       else
       {
            indice0 = Integer.parseInt(txt0.getText());
       }
       if (indice0>8){
           JOptionPane.showMessageDialog(null,indice0 + " no es valido, ingrese un entero entre 0 y 8");
            btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
       }
       
       //convierte a entero string de casilla 1
       //si es texto vacio lo toma como 0
       //notifica si es mayor a 8  
      int indice1;
      if (txt1.getText().equals("") || txt1.getText().equals("0")){
           indice1 = 0;
           txt1.setBackground(Color.BLACK);
      }
      else
      {
            indice1 = Integer.parseInt(txt1.getText());
      }
      if (indice1>8){
           JOptionPane.showMessageDialog(null,indice1 + " no es valido, ingrese un entero entre 0 y 8");
           btnUp.setEnabled(false);
           btnDown.setEnabled(false);
           btnLeft.setEnabled(false);
           btnRight.setEnabled(false);
       }
       
      //convierte a entero string de casilla 2
      //si es texto vacio lo toma como 0
      //notifica si es mayor a 8 
      int indice2;
      if (txt2.getText().equals("") || txt2.getText().equals("0")){
           indice2 = 0;
           txt2.setBackground(Color.BLACK);
      }
      else
      {
            indice2 = Integer.parseInt(txt2.getText());
      }
      if (indice2>8){
           JOptionPane.showMessageDialog(null,indice2 + " no es valido, ingrese un entero entre 0 y 8");
           btnUp.setEnabled(false);
           btnDown.setEnabled(false);
           btnLeft.setEnabled(false);
           btnRight.setEnabled(false);
      }
      
      //convierte a entero string de casilla 3
       //si es texto vacio lo toma como 0
       //notifica si es mayor a 8 
      int indice3;
       if (txt3.getText().equals("") || txt3.getText().equals("0")){
           indice3 = 0;
           txt3.setBackground(Color.BLACK);
       }
       else
       {
            indice3 = Integer.parseInt(txt3.getText());
       }
       if (indice3>8){
           JOptionPane.showMessageDialog(null,indice3 + " no es valido, ingrese un entero entre 0 y 8");
           btnUp.setEnabled(false);
           btnDown.setEnabled(false);
           btnLeft.setEnabled(false);
           btnRight.setEnabled(false);
       }
       
       //convierte a entero string de casilla 4
       //si es texto vacio lo toma como 0
       //notifica si es mayor a 8 
       int indice4;
       if (txt4.getText().equals("") || txt4.getText().equals("0")){
           indice4 = 0;
           txt4.setBackground(Color.BLACK);
       }
       else
       {
            indice4 = Integer.parseInt(txt4.getText());
       }
       if (indice4>8){
           JOptionPane.showMessageDialog(null,indice4 + " no es valido, ingrese un entero entre 0 y 8");
           btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
       }
       
       //convierte a entero string de casilla 5
       //si es texto vacio lo toma como 0
       //notifica si es mayor a 8 
       int indice5;
       if (txt5.getText().equals("") || txt5.getText().equals("0")){
           indice5 = 0;
           txt5.setBackground(Color.BLACK);
       }
       else
       {
            indice5 = Integer.parseInt(txt5.getText());
       }
       if (indice5>8){
           JOptionPane.showMessageDialog(null,indice5 + " no es valido, ingrese un entero entre 0 y 8");
           btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
       }
       
       //convierte a entero string de casilla 6
       //si es texto vacio lo toma como 0
       //notifica si es mayor a 8 
       int indice6;
       if (txt6.getText().equals("") || txt6.getText().equals("0")){
           indice6 = 0;
           txt6.setBackground(Color.BLACK);
       }
       else
       {
            indice6 = Integer.parseInt(txt6.getText());
       }
       if (indice6>8){
           JOptionPane.showMessageDialog(null,indice6 + " no es valido, ingrese un entero entre 0 y 8");
           btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
       }
       
       //convierte a entero string de casilla 7
       //si es texto vacio lo toma como 0
       //notifica si es mayor a 8 
       int indice7;
       if (txt7.getText().equals("") || txt7.getText().equals("0")){
           indice7 = 0;
           txt7.setBackground(Color.BLACK);
           
       }
       else
       {
            indice7 = Integer.parseInt(txt7.getText());
       }
       if (indice7>8){
           JOptionPane.showMessageDialog(null,indice7 + " no es valido, ingrese un entero entre 0 y 8");
           btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
       }
       
       //convierte a entero string de casilla 8
       //si es texto vacio lo toma como 0
       //notifica si es mayor a 8 
       int indice8;
       if (txt8.getText().equals("") || txt8.getText().equals("0")){
           indice8 = 0;
           txt8.setBackground(Color.BLACK);
       }
       else
       {
            indice8 = Integer.parseInt(txt8.getText());
       }
       if (indice8>8){
           JOptionPane.showMessageDialog(null,indice8 + " no es valido, ingrese un entero entre 0 y 8");
           btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
       }
       
       //crea una lista en donde se ingresan los valores del tablero inicial
       
       current.add(indice0);
       current.add(indice1);
       current.add(indice2);
       current.add(indice3);
       current.add(indice4);
       current.add(indice5);
       current.add(indice6);
       current.add(indice7);
       current.add(indice8);
       
       JOptionPane.showMessageDialog(null,current);
       
       //valida que no hayan repetidos
       for(int i=0; i<current.size()-1; i++){
           int e1 = current.get(i);
           for(int j=1+i; j<current.size(); j++){
               int e2 = current.get(j);
               if(e1==e2){
                  JOptionPane.showMessageDialog(null, "No se aceptan repetidos: " + "indices " +
                          i + " y " + j + ". Limpiar y volver a empezar");
                    btnUp.setEnabled(false);
                    btnDown.setEnabled(false);
                    btnLeft.setEnabled(false);
                    btnRight.setEnabled(false);
                    
               }
           }
       }
       
       //valida que haya un cero
      
       
       //deshabilita botones con base en posicion inicial del 0
       if(indice0 == 0 || indice1 == 0 || indice1 == 0 ){
           btnUp.setEnabled(false);
        }
       
        if(indice0 == 0 || indice3==0 || indice6 == 0){
           btnLeft.setEnabled(false);
        }
        
       if(indice2 == 0 || indice5==0 || indice8 == 0){
           btnRight.setEnabled(false);
        }
       
       if(indice6 == 0 || indice7 == 0 || indice8 == 0){
           btnDown.setEnabled(false);
        }
       
    
        //CREA LISTA DEL JUEGO
        String list = "(";
        for(int  i = 0; i < current.size();  i++){
            list = list.concat(current.get(i).toString() + " ");
        }
        list = list.concat(")");
    
        //CREA UN ARCHIVO TXT CON LA LISTA 
        try {
            PrintWriter out = new PrintWriter("estado.txt");
            out.println(list);
            out.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PuzzleGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
       
      
        System.out.println("Resultado:");
        String command = "clisp 8Puzzle.lisp";
        Process proc = null;
        try {
            proc = Runtime.getRuntime().exec(command);
        } catch (IOException ex) {
            Logger.getLogger(PuzzleGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Read the output

        BufferedReader reader =
                new BufferedReader(new InputStreamReader(proc.getInputStream()));

        String line = "";
        try {
            while((line = reader.readLine()) != null) {
                System.out.print(line + "\n");
                txtResul.setText(line+ "\n");
            }
        } catch (IOException ex) {
            Logger.getLogger(PuzzleGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            proc.waitFor();
        } catch (InterruptedException ex) {
            Logger.getLogger(PuzzleGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonSolve1ActionPerformed
 
    
    
    
    private void txt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt2ActionPerformed

    private void txt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt1ActionPerformed

    private void txt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt3ActionPerformed

    private void txt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt4ActionPerformed

    private void txt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt5ActionPerformed

    private void txt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt6ActionPerformed

    private void txt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt7ActionPerformed

    private void txt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt8ActionPerformed

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        btnUp.setEnabled(false);
        btnDown.setEnabled(false);
        btnLeft.setEnabled(false);
        btnRight.setEnabled(false);
        
        //encuentra en donde se ubica el 0
        int i=0;
        while(current.get(i)!=0){
            i++;
        }
       
        //Movimientos para arriba, swapea elementos en la lista, habilita botones
        if(i == 3){
            btnRight.setEnabled(true);
            txt0.setBackground(Color.BLACK);
            txt3.setBackground(Color.WHITE);
            txt3.setText(txt0.getText());
            txt0.setText(current.get(i).toString());
            Collections.swap(current, i, (i-3));
            //txtResul.setText(current.toString());
        }
        
        if(i == 4){
            btnRight.setEnabled(true);
            btnLeft.setEnabled(true);
            txt1.setBackground(Color.BLACK);
            txt4.setBackground(Color.WHITE);
            txt4.setText(txt1.getText());
            txt1.setText(current.get(i).toString());
            Collections.swap(current, i, (i-3));
        }
        
        if(i == 5){
            btnLeft.setEnabled(true);
            txt2.setBackground(Color.BLACK);
            txt5.setBackground(Color.WHITE);
            txt5.setText(txt2.getText());
            txt2.setText(current.get(i).toString());
            Collections.swap(current, i, (i-3));
        }
        
        if(i == 6){
            btnUp.setEnabled(true);
            btnRight.setEnabled(true);
            txt3.setBackground(Color.BLACK);
            txt6.setBackground(Color.WHITE);
            txt6.setText(txt3.getText());
            txt3.setText(current.get(i).toString());
            Collections.swap(current, i, (i-3));
        }
        
        if(i == 7){
            btnUp.setEnabled(true);
            btnRight.setEnabled(true);
            btnLeft.setEnabled(true);
            txt4.setBackground(Color.BLACK);
            txt7.setBackground(Color.WHITE);
            txt7.setText(txt4.getText());
            txt4.setText(current.get(i).toString());
            Collections.swap(current, i, (i-3));
        }
        
        if(i == 8){
            btnUp.setEnabled(true);
            btnLeft.setEnabled(true);
            txt5.setBackground(Color.BLACK);
            txt8.setBackground(Color.WHITE);
            txt8.setText(txt5.getText());
            txt5.setText(current.get(i).toString());
            Collections.swap(current, i, (i-3));
        }
        
        //verde cuando resuelve, apaga botones
        if(txt0.getText().equals("0") && txt1.getText().equals("1") && txt2.getText().equals("2")
          && txt3.getText().equals("3") && txt4.getText().equals("4") && txt5.getText().equals("5") 
          && txt6.getText().equals("6") && txt7.getText().equals("7") && txt8.getText().equals("8")){
            txt1.setBackground(Color.GREEN);
            txt2.setBackground(Color.GREEN);
            txt3.setBackground(Color.GREEN);
            txt4.setBackground(Color.GREEN);
            txt5.setBackground(Color.GREEN);
            txt6.setBackground(Color.GREEN);
            txt7.setBackground(Color.GREEN);
            txt8.setBackground(Color.GREEN);
            
            btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
        }
        
    }//GEN-LAST:event_btnUpActionPerformed

    private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
 
         btnUp.setEnabled(false);
        btnDown.setEnabled(false);
        btnLeft.setEnabled(false);
        btnRight.setEnabled(false);
        
        //encuentra en donde se ubica el 0
        int i=0;
        while(current.get(i)!=0){
            i++;
        }
       
        //Movimientos para abajo, swapea elementos en la lista, habilita botones
        if(i == 0){
            btnRight.setEnabled(true);
            btnDown.setEnabled(true);
            txt3.setBackground(Color.BLACK);
            txt0.setBackground(Color.WHITE);
            txt0.setText(txt3.getText());
            txt3.setText(current.get(i).toString());
            Collections.swap(current, i, (i+3));
            //txtResul.setText(current.toString());
        }
        
        if(i == 1){
            btnRight.setEnabled(true);
            btnLeft.setEnabled(true);
            btnDown.setEnabled(true);
            txt4.setBackground(Color.BLACK);
            txt1.setBackground(Color.WHITE);
            txt1.setText(txt4.getText());
            txt4.setText(current.get(i).toString());
            Collections.swap(current, i, (i+3));
        }
        
        if(i == 2){
            btnLeft.setEnabled(true);
            btnDown.setEnabled(true);
            txt5.setBackground(Color.BLACK);
            txt2.setBackground(Color.WHITE);
            txt2.setText(txt5.getText());
            txt5.setText(current.get(i).toString());
            Collections.swap(current, i, (i+3));
        }
        
        if(i == 3){
            btnRight.setEnabled(true);
            txt6.setBackground(Color.BLACK);
            txt3.setBackground(Color.WHITE);
            txt3.setText(txt6.getText());
            txt6.setText(current.get(i).toString());
            Collections.swap(current, i, (i+3));
        }
        
        if(i == 4){
            btnRight.setEnabled(true);
            btnLeft.setEnabled(true);
            txt7.setBackground(Color.BLACK);
            txt4.setBackground(Color.WHITE);
            txt4.setText(txt7.getText());
            txt7.setText(current.get(i).toString());
            Collections.swap(current, i, (i+3));
        }
        
        if(i == 5){
            btnLeft.setEnabled(true);
            txt8.setBackground(Color.BLACK);
            txt5.setBackground(Color.WHITE);
            txt5.setText(txt8.getText());
            txt8.setText(current.get(i).toString());
            Collections.swap(current, i, (i+3));
        }
        
           //verde cuando resuelve, apaga botones
        if(txt0.getText().equals("0") && txt1.getText().equals("1") && txt2.getText().equals("2")
          && txt3.getText().equals("3") && txt4.getText().equals("4") && txt5.getText().equals("5") 
          && txt6.getText().equals("6") && txt7.getText().equals("7") && txt8.getText().equals("8")){
            txt1.setBackground(Color.GREEN);
            txt2.setBackground(Color.GREEN);
            txt3.setBackground(Color.GREEN);
            txt4.setBackground(Color.GREEN);
            txt5.setBackground(Color.GREEN);
            txt6.setBackground(Color.GREEN);
            txt7.setBackground(Color.GREEN);
            txt8.setBackground(Color.GREEN);
            
            btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
        }
        
          
    }//GEN-LAST:event_btnDownActionPerformed

    private void btnLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftActionPerformed
        btnUp.setEnabled(false);
        btnDown.setEnabled(false);
        btnLeft.setEnabled(false);
        btnRight.setEnabled(false);
        
        //encuentra en donde se ubica el 0
        int i=0;
        while(current.get(i)!=0){
            i++;
        }
      
        
        //Movimientos para izquierda, swapea elementos en la lista, habilita botones
        if(i == 1){
            btnDown.setEnabled(true);
            txt0.setBackground(Color.BLACK);
            txt1.setBackground(Color.WHITE);
            txt1.setText(txt0.getText());
            txt0.setText(current.get(i).toString());
            Collections.swap(current, i, (i-1));
            //txtResul.setText(current.toString());
        }
        
        if(i == 2){
            btnDown.setEnabled(true);
            btnLeft.setEnabled(true);
            txt1.setBackground(Color.BLACK);
            txt2.setBackground(Color.WHITE);
            txt2.setText(txt1.getText());
            txt1.setText(current.get(i).toString());
            Collections.swap(current, i, (i-1));
        }
        
        if(i == 4){
            btnDown.setEnabled(true);
            btnUp.setEnabled(true);
            txt3.setBackground(Color.BLACK);
            txt4.setBackground(Color.WHITE);
            txt4.setText(txt3.getText());
            txt3.setText(current.get(i).toString());
            Collections.swap(current, i, (i-1));
        }
        
        if(i == 5){
            btnDown.setEnabled(true);
            btnLeft.setEnabled(true);
            btnUp.setEnabled(true);
            txt4.setBackground(Color.BLACK);
            txt5.setBackground(Color.WHITE);
            txt5.setText(txt4.getText());
            txt4.setText(current.get(i).toString());
            Collections.swap(current, i, (i-1));
        }
        
        if(i == 7){
            btnUp.setEnabled(true);
            txt6.setBackground(Color.BLACK);
            txt7.setBackground(Color.WHITE);
            txt7.setText(txt6.getText());
            txt6.setText(current.get(i).toString());
            Collections.swap(current, i, (i-1));
        }
        
        if(i == 8){
            btnUp.setEnabled(true);
            btnLeft.setEnabled(true);
            txt7.setBackground(Color.BLACK);
            txt8.setBackground(Color.WHITE);
            txt8.setText(txt7.getText());
            txt7.setText(current.get(i).toString());
            Collections.swap(current, i, (i-1));
        }
        
           //verde cuando resuelve, apaga botones
        if(txt0.getText().equals("0") && txt1.getText().equals("1") && txt2.getText().equals("2")
          && txt3.getText().equals("3") && txt4.getText().equals("4") && txt5.getText().equals("5") 
          && txt6.getText().equals("6") && txt7.getText().equals("7") && txt8.getText().equals("8")){
            txt1.setBackground(Color.GREEN);
            txt2.setBackground(Color.GREEN);
            txt3.setBackground(Color.GREEN);
            txt4.setBackground(Color.GREEN);
            txt5.setBackground(Color.GREEN);
            txt6.setBackground(Color.GREEN);
            txt7.setBackground(Color.GREEN);
            txt8.setBackground(Color.GREEN);
            
            btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
        }
        
        
    }//GEN-LAST:event_btnLeftActionPerformed

    private void btnRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightActionPerformed
        btnUp.setEnabled(false);
        btnDown.setEnabled(false);
        btnLeft.setEnabled(false);
        btnRight.setEnabled(false);
        
        //encuentra en donde se ubica el 0
        int i=0;
        while(current.get(i)!=0){
            i++;
        }
    
        //Movimientos para derecha, swapea elementos en la lista, habilita botones
        if(i == 0){
            btnDown.setEnabled(true);
            btnRight.setEnabled(true);
            txt1.setBackground(Color.BLACK);
            txt0.setBackground(Color.WHITE);
            txt0.setText(txt1.getText());
            txt1.setText(current.get(i).toString());
            Collections.swap(current, i, (i+1));
            //txtResul.setText(current.toString());
        }
        
        if(i == 1){
            btnDown.setEnabled(true);
            txt2.setBackground(Color.BLACK);
            txt1.setBackground(Color.WHITE);
            txt1.setText(txt2.getText());
            txt2.setText(current.get(i).toString());
            Collections.swap(current, i, (i+1));
        }
        
        if(i == 3){
            btnDown.setEnabled(true);
            btnUp.setEnabled(true);
            btnRight.setEnabled(true);
            txt4.setBackground(Color.BLACK);
            txt3.setBackground(Color.WHITE);
            txt3.setText(txt4.getText());
            txt4.setText(current.get(i).toString());
            Collections.swap(current, i, (i+1));
        }
        
        if(i == 4){
            btnUp.setEnabled(true);
            btnDown.setEnabled(true);
            txt5.setBackground(Color.BLACK);
            txt4.setBackground(Color.WHITE);
            txt4.setText(txt5.getText());
            txt5.setText(current.get(i).toString());
            Collections.swap(current, i, (i+1));
        }
        
        if(i == 6){
            btnUp.setEnabled(true);
            btnRight.setEnabled(true);
            txt7.setBackground(Color.BLACK);
            txt6.setBackground(Color.WHITE);
            txt6.setText(txt7.getText());
            txt7.setText(current.get(i).toString());
            Collections.swap(current, i, (i+1));
        }
        
        if(i == 7){
            btnUp.setEnabled(true);
            txt8.setBackground(Color.BLACK);
            txt7.setBackground(Color.WHITE);
            txt7.setText(txt8.getText());
            txt8.setText(current.get(i).toString());
            Collections.swap(current, i, (i+1));
        }
        
           //verde cuando resuelve, apaga botones
        if(txt0.getText().equals("0") && txt1.getText().equals("1") && txt2.getText().equals("2")
          && txt3.getText().equals("3") && txt4.getText().equals("4") && txt5.getText().equals("5") 
          && txt6.getText().equals("6") && txt7.getText().equals("7") && txt8.getText().equals("8")){
            txt1.setBackground(Color.GREEN);
            txt2.setBackground(Color.GREEN);
            txt3.setBackground(Color.GREEN);
            txt4.setBackground(Color.GREEN);
            txt5.setBackground(Color.GREEN);
            txt6.setBackground(Color.GREEN);
            txt7.setBackground(Color.GREEN);
            txt8.setBackground(Color.GREEN);
            
            btnUp.setEnabled(false);
            btnDown.setEnabled(false);
            btnLeft.setEnabled(false);
            btnRight.setEnabled(false);
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRightActionPerformed

    private void txtResulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResulActionPerformed

 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, InterruptedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PuzzleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PuzzleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PuzzleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PuzzleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PuzzleGUI().setVisible(true);
            }
        });
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnLeft;
    private javax.swing.JButton btnRight;
    private javax.swing.JButton btnUp;
    private javax.swing.JButton jButtonClean;
    private javax.swing.JButton jButtonSolve1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txt0;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    private javax.swing.JTextField txt5;
    private javax.swing.JTextField txt6;
    private javax.swing.JTextField txt7;
    private javax.swing.JTextField txt8;
    private javax.swing.JTextField txtResul;
    // End of variables declaration//GEN-END:variables
}
